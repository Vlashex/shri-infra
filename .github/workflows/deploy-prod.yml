name: Deploy to Prod
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to deploy"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Docker login to YCR
        run: echo "${{ secrets.YCR_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Check if image exists
        run: |
          IMAGE="cr.yandex/${{ secrets.REESTR_ID }}/app:${{ github.event.inputs.version }}_latest"
          docker manifest inspect "$IMAGE" > /dev/null 2>&1 \
            || (echo "Image not found: $IMAGE" && exit 1)

      - name: SSH & Run container
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull cr.yandex/${{ secrets.REESTR_ID }}/app:${{ github.event.inputs.version }}_latest
            docker stop app || true
            docker rm app || true
            docker run -d --name app cr.yandex/${{ secrets.REESTR_ID }}/app:${{ github.event.inputs.version }}_latest

      - name: Download issue number
        uses: actions/download-artifact@v4
        with:
          name: release-issue-number

      - name: Read issue number
        id: issue
        run: echo "ISSUE_NUMBER=$(cat release-issue-number.txt)" >> $GITHUB_ENV

      - name: Comment on Issue
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: parseInt(process.env.ISSUE_NUMBER),
              body: `Deployed version ${process.env.VERSION}_latest to prod by @${{ github.actor }} on $(date -u +"%Y-%m-%d")`
            });
        env:
          ISSUE_NUMBER: ${{ env.ISSUE_NUMBER }}
          VERSION: ${{ github.event.inputs.version }}
